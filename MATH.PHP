<?php
ERROR_REPORTING(0);

// P=NP ENCRYPTION

// STEP 1
$P = $_GET['PASSNUMBERTOENCRYPT']; // FOR ENCRYPTING A NUMBER AND RECEIVING A LIST OF PUBLIC KEY NUMBERS (PASSNUMBER CAN BE ANY WHOLE NUMBER OR DECIMAL)

// STEP 1 IS USED LIKE THIS
// HTTP://LOCALHOST/MATH.PHP?PASSNUMBERTOENCRYPT=0.5

// STEP 2
$DECRYPT = $_GET['PUBLICKEY']; // FOR DECRYPTING: THIS IS WHERE YOU PASTE THE PUBLIC KEY NUMBER YOU CHOOSE
$PASSNUMBER = $_GET['PASSNUMBER']; // FOR ACCESSING: THIS IS WHERE YOU TYPE YOUR ORIGINAL PASSNUMBER ENCRYPTED IN THE FIRST STEP

// STEP 2 IS USED LIKE THIS
// HTTP://LOCALHOST/MATH.PHP?PASSNUMBER=0.5&PUBLICKEY=0.00000000000000000000000000000039443045261050590270586428264139311483660321755451150238513946533203125

IF ($P != NULL){
	$N = ARRAY();
	$N[] = 1;
	
	ECHO "CHOOSE A PUBLIC KEY FROM THE LINES OF NUMBERS BELOW, THE LARGER OR SMALLER THE NUMBER, THE MORE ENCRYPTED IT IS.<BR><BR>";
	FOR ($X=0;$X<=COUNT($N);$X++){
		$ANSWER = BCMUL($P,$N[$X],99999999999);
		$N[] = $ANSWER;
		
		ECHO "{$ANSWER}<BR>";
	}
}

IF ($DECRYPT != NULL){
	WHILE ($DECRYPT != $PASSNUMBER){
		$DECRYPT = ($DECRYPT/$PASSNUMBER);
		
		ECHO "DECRYPTING...<BR>";
	}
	
	IF ($DECRYPT == $PASSNUMBER){
		ECHO "DECRYPTED! THE PASSNUMBER IS: {$DECRYPT}";
	}
}
?>

		
